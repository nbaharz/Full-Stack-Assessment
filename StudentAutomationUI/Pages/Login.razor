@page "/login"
@using StudentAutomationUI.Services
@using StudentAutomationUI.Models
@inject AuthService AuthService
@inject NavigationManager Navigation

<PageTitle>Login</PageTitle>

<div class="container mt-5">
    <div class="row justify-content-center">
        <div class="col-md-6">
            <div class="card">
                <div class="card-header">
                    <h3 class="text-center">Login</h3>
                </div>
                <div class="card-body">
                    @if (!string.IsNullOrEmpty(errorMessage))
                    {
                        <div class="alert alert-danger">@errorMessage</div>
                    }

                    <EditForm Model="loginModel" OnValidSubmit="HandleLogin">
                        <DataAnnotationsValidator />
                        
                        <div class="mb-3">
                            <label for="username" class="form-label">Email</label>
                            <InputText id="username" class="form-control" @bind-Value="loginModel.Username" />
                            <ValidationMessage For="@(() => loginModel.Username)" />
                        </div>

                        <div class="mb-3">
                            <label for="password" class="form-label">Password</label>
                            <InputText id="password" type="password" class="form-control" @bind-Value="loginModel.Password" />
                            <ValidationMessage For="@(() => loginModel.Password)" />
                        </div>

                        <div class="d-grid">
                            <button type="submit" class="btn btn-primary" disabled="@isLoading">
                                @if (isLoading)
                                {
                                    <span class="spinner-border spinner-border-sm me-2"></span>
                                }
                                Login
                            </button>
                        </div>
                    </EditForm>

                    <div class="text-center mt-3">
                        <p>Don't have an account? <a href="/register">Register here</a></p>
                    </div>

                    <div class="mt-4">
                        <h6>Demo Accounts:</h6>
                        <small class="text-muted">
                            Admin: admin / admin123<br>
                            Teacher: teacher1 / teacher123<br>
                            Student: student1 / student123
                        </small>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    private LoginModel loginModel = new();
    private string errorMessage = string.Empty;
    private bool isLoading = false;

    public class LoginModel
    {
        [Required(ErrorMessage = "Email is required")]
        [EmailAddress(ErrorMessage = "Invalid email format")]
        public string Username { get; set; } = string.Empty;

        [Required(ErrorMessage = "Password is required")]
        public string Password { get; set; } = string.Empty;
    }

    private async Task HandleLogin()
    {
        isLoading = true;
        errorMessage = string.Empty;

        try
        {
            var success = await AuthService.LoginAsync(loginModel.Username, loginModel.Password);
            if (success)
            {
                Navigation.NavigateTo("/dashboard");
            }
            else
            {
                errorMessage = "Invalid username or password";
            }
        }
        catch (Exception ex)
        {
            errorMessage = "An error occurred during login";
        }
        finally
        {
            isLoading = false;
        }
    }
}