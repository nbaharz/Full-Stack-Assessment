@page "/students"
@using StudentAutomationUI.Services
@using StudentAutomationUI.Models
@inject AuthService AuthService
@inject IApiService Api
@inject NavigationManager Navigation

<PageTitle>Students</PageTitle>

@if (AuthService.IsAuthenticated)
{
    <div class="container-fluid">
        <div class="row">
            <div class="col-12">
                <div class="d-flex justify-content-between align-items-center mb-4">
                    <h2>Students</h2>
                    <div>
                        <a href="/dashboard" class="btn btn-outline-secondary">Back to Dashboard</a>
                    </div>
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-12">
                <div class="card">
                    <div class="card-body">
                        @if (students.Any())
                        {
                            <div class="table-responsive">
                                <table class="table table-striped">
                                    <thead>
                                        <tr>
                                            <th>Student Number</th>
                                            <th>Name</th>
                                            <th>Email</th>
                                            <th>Class</th>
                                            <th>Birth Date</th>
                                            <th>Actions</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var student in students)
                                        {
                                            <tr>
                                                <td>@student.StudentNumber</td>
                                                <td>@student.FirstName @student.LastName</td>
                                                <td>@student.Email</td>
                                                <td>@student.Class</td>
                                                <td>@student.BirthDate.ToString("MM/dd/yyyy")</td>
                                                <td>
                                                    <a href="/students/@student.Id" class="btn btn-sm btn-primary">View Details</a>
                                                </td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>
                        }
                        else
                        {
                            <div class="text-center py-4">
                                <p class="text-muted">No students found.</p>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
}
else
{
    <div class="container mt-5">
        <div class="row justify-content-center">
            <div class="col-md-6">
                <div class="alert alert-warning text-center">
                    <h4>Please Login</h4>
                    <p>You need to be logged in to view students.</p>
                    <a href="/login" class="btn btn-primary">Login</a>
                </div>
            </div>
        </div>
    </div>
}

@code {
    private List<Student> students = new();

    protected override async Task OnInitializedAsync()
    {
        if (!AuthService.IsAuthenticated) return;
        var response = await Api.GetStudentsAsync();
        if (response.IsSuccessStatusCode)
        {
            var list = await response.Content.ReadFromJsonAsync<List<Student>>();
            students = list ?? new List<Student>();
        }
    }
}