@page "/students/{StudentId:int}"
@using StudentAutomationUI.Services
@using StudentAutomationUI.Models
@inject AuthService AuthService
@inject DataService DataService
@inject NavigationManager Navigation

<PageTitle>Student Details</PageTitle>

@if (AuthService.IsAuthenticated)
{
    @if (student != null)
    {
        <div class="container-fluid">
            <div class="row">
                <div class="col-12">
                    <div class="d-flex justify-content-between align-items-center mb-4">
                        <h2>Student Details</h2>
                        <div>
                            <a href="/students" class="btn btn-outline-secondary">Back to Students</a>
                        </div>
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-md-4">
                    <div class="card">
                        <div class="card-header">
                            <h5>Student Information</h5>
                        </div>
                        <div class="card-body">
                            <p><strong>Student Number:</strong> @student.StudentNumber</p>
                            <p><strong>Name:</strong> @student.FirstName @student.LastName</p>
                            <p><strong>Email:</strong> @student.Email</p>
                            <p><strong>Phone:</strong> @student.Phone</p>
                            <p><strong>Class:</strong> @student.Class</p>
                            <p><strong>Birth Date:</strong> @student.BirthDate.ToString("MM/dd/yyyy")</p>
                        </div>
                    </div>
                </div>

                <div class="col-md-8">
                    <div class="card">
                        <div class="card-header">
                            <h5>Grades</h5>
                        </div>
                        <div class="card-body">
                            @if (studentGrades.Any())
                            {
                                <div class="table-responsive">
                                    <table class="table table-sm">
                                        <thead>
                                            <tr>
                                                <th>Course</th>
                                                <th>Exam Type</th>
                                                <th>Score</th>
                                                <th>Date</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            @foreach (var grade in studentGrades)
                                            {
                                                <tr>
                                                    <td>@grade.Course?.CourseName</td>
                                                    <td>@grade.ExamType</td>
                                                    <td>
                                                        <span class="badge @(grade.Score >= 80 ? "bg-success" : grade.Score >= 60 ? "bg-warning" : "bg-danger")">
                                                            @grade.Score
                                                        </span>
                                                    </td>
                                                    <td>@grade.ExamDate.ToString("MM/dd/yyyy")</td>
                                                </tr>
                                            }
                                        </tbody>
                                    </table>
                                </div>
                            }
                            else
                            {
                                <p class="text-muted">No grades found for this student.</p>
                            }
                        </div>
                    </div>

                    <div class="card mt-3">
                        <div class="card-header">
                            <h5>Attendance</h5>
                        </div>
                        <div class="card-body">
                            @if (studentAttendances.Any())
                            {
                                <div class="table-responsive">
                                    <table class="table table-sm">
                                        <thead>
                                            <tr>
                                                <th>Course</th>
                                                <th>Date</th>
                                                <th>Status</th>
                                                <th>Notes</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            @foreach (var attendance in studentAttendances)
                                            {
                                                <tr>
                                                    <td>@attendance.Course?.CourseName</td>
                                                    <td>@attendance.Date.ToString("MM/dd/yyyy")</td>
                                                    <td>
                                                        <span class="badge @(attendance.IsPresent ? "bg-success" : "bg-danger")">
                                                            @(attendance.IsPresent ? "Present" : "Absent")
                                                        </span>
                                                    </td>
                                                    <td>@attendance.Notes</td>
                                                </tr>
                                            }
                                        </tbody>
                                    </table>
                                </div>
                            }
                            else
                            {
                                <p class="text-muted">No attendance records found for this student.</p>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
    else
    {
        <div class="container mt-5">
            <div class="row justify-content-center">
                <div class="col-md-6">
                    <div class="alert alert-danger text-center">
                        <h4>Student Not Found</h4>
                        <p>The requested student could not be found.</p>
                        <a href="/students" class="btn btn-primary">Back to Students</a>
                    </div>
                </div>
            </div>
        </div>
    }
}
else
{
    <div class="container mt-5">
        <div class="row justify-content-center">
            <div class="col-md-6">
                <div class="alert alert-warning text-center">
                    <h4>Please Login</h4>
                    <p>You need to be logged in to view student details.</p>
                    <a href="/login" class="btn btn-primary">Login</a>
                </div>
            </div>
        </div>
    </div>
}

@code {
    [Parameter]
    public int StudentId { get; set; }

    private Student? student;
    private List<Grade> studentGrades = new();
    private List<Attendance> studentAttendances = new();

    protected override async Task OnInitializedAsync()
    {
        if (AuthService.IsAuthenticated)
        {
            student = await DataService.GetStudentAsync(StudentId);
            if (student != null)
            {
                studentGrades = await DataService.GetGradesByStudentAsync(StudentId);
                studentAttendances = await DataService.GetAttendancesByStudentAsync(StudentId);
            }
        }
    }
}